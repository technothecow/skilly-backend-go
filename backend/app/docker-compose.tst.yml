services:
  app:
    build:
      context: . # Path to the directory containing the Dockerfile
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000 (adjust if your app uses a different port)
    environment:
      # --- Configuration for your Go App ---
      # Example environment variables your app might need to connect to other services
      # MONGODB_URI: mongodb://mongo:27017 # Use service name 'mongo' and default port
      JWT_SECRET_KEY: secretsecretsecretsecretsecretsecret
      MINIO_ENDPOINT: minio:9000 # Use service name 'minio' and its API port
      MINIO_ACCESS_KEY: minioadmin # MUST match MINIO_ROOT_USER below
      MINIO_SECRET_KEY: minioadmin # MUST match MINIO_ROOT_PASSWORD below
      MINIO_USE_SSL: "false" # Connect to MinIO within Docker network without SSL
      MINIO_BUCKET: myappbucket # Default bucket name your app might use
      # Add any other environment variables your app needs
    depends_on:
      - mongo # Wait for mongo to start (doesn't guarantee readiness, just container start)
      - minio # Wait for minio to start
    networks:
      - app-network # Connect to the custom network
    restart: unless-stopped # Restart policy

  # MongoDB Service
  mongo:
    image: mongo:8.0.9 # Use the official MongoDB image (consider pinning a version e.g., mongo:6.0)
    ports:
      - "27017:27017" # Optional: Map host port for direct access (debugging)
    volumes:
      - mongo_tst_data:/data/db # Persist database data using a named volume
    networks:
      - app-network
    restart: unless-stopped

  # MinIO (S3 Compatible Storage) Service
  minio:
    image: minio/minio:latest # Use the official MinIO image
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console/UI port
    environment:
      # --- MinIO Configuration ---
      # IMPORTANT: Change these default credentials for production!
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_tst_data:/data # Persist bucket data using a named volume
    command: server /data --console-address ":9001" # Command to start MinIO server and enable console on port 9001
    networks:
      - app-network
    restart: unless-stopped

# Define named volumes for persistent storage
volumes:
  mongo_tst_data: {} # Docker will manage this volume
  minio_tst_data: {} # Docker will manage this volume

# Define custom network for service communication
networks:
  app-network:
    driver: bridge # Use the default bridge driver
